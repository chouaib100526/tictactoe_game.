.. Readthedocs documentation master file, created by
   sphinx-quickstart on Sun Mar  2 00:10:43 2025.
   You can adapt this file completely to your liking, but it should at least
   contain the root `toctree` directive.

=============================
Tic-Tac-Toe - Documentation
=============================

Bienvenue dans la documentation du jeu **Tic-Tac-Toe** dÃ©veloppÃ© avec `Pygame` et une intelligence artificielle utilisant l'algorithme `Minimax`.

------------
Installation
------------

Avant d'exÃ©cuter le jeu, assurez-vous d'avoir installÃ© les dÃ©pendances requises.

1. **Installer Pygame**

```bash
pip install pygame
```

2. **Lancer le jeu**

```bash
python runner.py
```

------------
Comment jouer ?
------------

Lorsque vous lancez le jeu, vous devez choisir votre rÃ´le :

- **"Play as X"** â†’ Vous commencez en premier.
- **"Play as O"** â†’ L'IA commence en premier.

### Interface du jeu
Le jeu affiche un plateau de **3x3** oÃ¹ vous devez cliquer pour placer votre marque (`X` ou `O`). L'IA utilise l'algorithme **Minimax** pour jouer automatiquement.

### Objectif
L'objectif est d'aligner **trois X ou trois O** sur une ligne, une colonne ou une diagonale.

------------
Algorithme Minimax
------------

L'algorithme `Minimax` est utilisÃ© pour permettre Ã  l'IA de jouer de maniÃ¨re optimale.

1. L'IA analyse toutes les actions possibles sur le plateau.
2. Elle Ã©value chaque action avec une fonction de score :
   - **1** â†’ Victoire de `X`
   - **-1** â†’ Victoire de `O`
   - **0** â†’ Match nul
3. Elle choisit le **meilleur coup** qui minimise les pertes et maximise les gains.

Exemple de code :

```python
def minimax(board):
    """
    Retourne le meilleur mouvement possible pour le joueur courant.
    """
    if terminal(board):
        return None

    current_player = player(board)
    best_value = -math.inf if current_player == X else math.inf
    best_move = None

    for action in actions(board):
        value = min_value(result(board, action)) if current_player == X else max_value(result(board, action))
        if (current_player == X and value > best_value) or (current_player == O and value < best_value):
            best_value = value
            best_move = action

    return best_move
```

------------
Structure du Code
------------

Le projet est structurÃ© comme suit :

ðŸ“‚ `tictactoe/`
  â”œâ”€â”€ `runner.py`  â†’ Interface graphique avec `Pygame`
  â”œâ”€â”€ `tictactoe.py`  â†’ Logique du jeu et IA Minimax
  â”œâ”€â”€ `OpenSans-Regular.ttf` â†’ Police utilisÃ©e pour l'affichage

### FonctionnalitÃ©s principales
- ðŸŽ® **Interface Pygame**
- ðŸ§  **IA avec Minimax**
- âœ… **DÃ©tection de fin de partie**
- ðŸ”„ **Option Rejouer**

------------
CrÃ©dits et Remerciements
------------

Ce projet a Ã©tÃ© rÃ©alisÃ© par **Chegdati Chouaib**.

### BibliothÃ¨ques utilisÃ©es
- `Pygame` â†’ Interface graphique
- `Math` et `Copy` â†’ Calculs pour l'algorithme Minimax

Merci d'avoir jouÃ© Ã  **Tic-Tac-Toe** ðŸŽ‰ !

